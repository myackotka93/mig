import NextPerson from '@/blocks/NextPerson/NextPerson'
import BigCard from '@/components/BigCard/BigCard'
import CardNews from '@/components/CardNews/CardNews'
import Divider from '@/components/Divider/Divider'
import Slider from '@/components/Slider/Slider'
import Layout from '@/layouts/Layout/Layout'
import LayoutLeft from '@/layouts/LayoutLeft/LayoutLeft'
import LayoutRight from '@/layouts/LayoutRight/LayoutRight'
import Button from '@/components/Button/Button'
import { parser } from '@/utils/typograf';
import styles from './index.module.scss';
import { useEffect, useState } from 'react'
import Partners from '@/blocks/main/Partners/Partners'
import Promo from '@/blocks/Promo/Promo'
import Modal from '@/components/Modal/Modal'
import Link from 'next/link';
import Directions from '@/blocks/main/Directions/Directions'
import Ecosystem from '@/blocks/main/Ecosystem/Ecosystem'
import Image from 'next/image'
import fetcher from '@/utils/fetcher'

export default function Home({ maps = [], stories = [], partners = [], team = [], attributes = {}, news }) {
  const [activeButtonMap, setActiveButtonMap] = useState({});
  const [modal, setModal] = useState(false);

  useEffect(() => {
    setActiveButtonMap(maps[0] ?? {});
  }, [maps])

  function handleMapToggle(type) {
    setActiveButtonMap(type);
  }

  function handleClose() {
    setModal(false);
  }

  function handleOpen() {
    setModal(true);
  }

  return (
    <main>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}

      <Promo stories={stories} />
      {attributes.active_about && (
        <Layout className={styles.news_big_global}>
          <LayoutLeft className={styles.news_big_left}>
            <div className="h3">О нас</div>
          </LayoutLeft>
          <LayoutRight className={styles.news_big_right}>
            <BigCard
              image_big={attributes.about_media}
              name={attributes.about_quote}
              info={attributes.about_info}
              logo="marks"
            />
          </LayoutRight>
        </Layout>
      )}

      {attributes.active_mig && (
        <Layout className={styles.info_layout}>
          <LayoutLeft className={styles.info_left}>
            <Link href="/">
              <a className={styles.logo}>
                <img className={styles.img} src="/images/logo_info.svg" alt="" />
              </a>
            </Link>
          </LayoutLeft>
          <LayoutRight className={styles.info_right}>
            <h2 className={styles.info_heading}>{attributes.about_mig}</h2>
            <div className={styles.info_caption}>
              {parser(attributes.mig_info)}
            </div>
            {/* <Button className={styles.Button} onClick={handleOpen}>Подробнее</Button> */}
          </LayoutRight>
        </Layout>
      )}

      <Directions {...attributes}></Directions>
      <div className="offset"></div>
      <Ecosystem {...attributes}></Ecosystem>
      <div className="offset"></div>
      <Layout className={styles.map_container}>
        <LayoutLeft className={styles.map_left}>
          <div className={styles.heading_map}>В фокусе — <br /> регионы</div>
          <div className={styles.filter_buttons}>
            {maps.map((button, index) => (
              <Button
                className={styles.button_map}
                empty
                key={button.id}
                active={activeButtonMap.id === button.id}
                onClick={() => handleMapToggle(button)}
              >
                {button.name}
              </Button>
            ))}
          </div>
        </LayoutLeft>
        <LayoutRight className={styles.map}>
          <div className={styles.map_img}>
            {activeButtonMap.media && <Image quality={90} className="image-next" layout='fill' src={activeButtonMap.media} alt="" />}
          </div>
          {/* TODO ANIMATE */}
        </LayoutRight>
      </Layout>
      {/* <NextPerson team={team} title="Наша команда" /> */}

      <Divider className={styles.divider_big_last}></Divider>

      <Layout className={styles.news}>
        <LayoutLeft className={styles.news_left}>
          <div className="h3">Новости <br /> и события</div>
          <Button link="/press-center" className={styles.news_button}>Все новости</Button>
        </LayoutLeft>
        <LayoutRight className={styles.news_right}>
          <div className={styles.news_slider_cont}>
            <Slider
              className={styles.news_slider}
              spaceBetween={-1}
              pagination
              breakpoints={{
                320: { slidesPerView: 1.2 },
                768: { slidesPerView: 2 },
                900: { slidesPerView: 1.5 },
                1200: { slidesPerView: 2.3 },
                1500: { slidesPerView: 3 },
              }}
              navigation={{
                prevEl: '.' + styles.prev,
                nextEl: '.' + styles.next
              }}
            >
              {
                news.map((n, i) => (
                  <Slider.Slide key={n.id} className={styles.mini_news}>
                    <CardNews {...n} />
                  </Slider.Slide>
                ))
              }
            </Slider>

            <Slider.Prev className={styles.prev} />
            <Slider.Next className={styles.next} />
          </div>

        </LayoutRight>
      </Layout>

      <div className="offset"></div>
      <Partners
        blocks={partners}
        title="Партнеры"
        text='Сила Группы и в наших партнерах: крупнейших в России производителей лекарственных препаратов, поставщиков лучшего медицинского оборудования, экспертовпо проектированию и строительству современных медицинских центров, лидеровв юридическом и финансовом консалтинге.'
      />

      <Modal isOpen={modal} onClose={handleClose}>
        {parser(attributes.mig_popup)}
      </Modal>
    </main >
  )
}


export async function getStaticProps(ctx) {

  console.time('index');
  const [footer, partners, maps, stories, team, page, news] = await Promise.all([
    fetcher('api/option/footer', ctx),
    fetcher('api/partner', ctx),
    fetcher('api/map/main', ctx),
    fetcher('api/story', ctx),
    fetcher('api/team/all', ctx),
    fetcher('api/page/home', ctx),
    fetcher('api/news', ctx),
  ])

  console.timeEnd('index');

  return {
    props: {
      ...page,
      partners: partners.data,
      maps: maps.data,
      stories: stories.data,
      team: team.data,
      news: news.data,
      footer: footer.attributes
    },
    revalidate: 10
  }
}
